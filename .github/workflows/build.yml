name: Build Binaries

on: [push]

jobs:
  build-armhf:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: uraimo/run-on-arch-action@v2.6.0
        name: Install dependencies and build Cppcheck
        id: build
        with:
          arch: armv7
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/result:/artifacts"
      
          run: |
            apt-get update -y
            apt-get install -y python3 python3-pip
            python3 -m pip install platformio
            python3 build.py
      - name: Display structure of downloaded files
        run: ls -R result
      - name: Attach artifact
        uses: actions/upload-artifact@v3
        with:
          name: cppcheck-armhf
          path: result/tool-cppcheck-*.tar.gz
          retention-days: 1
  
  build-aarch64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - uses: uraimo/run-on-arch-action@v2.6.0
        name: Install dependencies and build Cppcheck
        id: build
        with:
          arch: aarch64
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/result:/artifacts"
      
          run: |
            apt-get update -y
            apt-get install -y python3 python3-pip
            python3 -m pip install platformio
            python3 build.py
      - name: Display structure of downloaded files
        run: ls -R result
      - name: Attach artifact
        uses: actions/upload-artifact@v3
        with:
          name: cppcheck-armhf
          path: result/tool-cppcheck-*.tar.gz
          retention-days: 1
    
  # build-win64:
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: msys2/setup-msys2@v2
  #       with:
  #         msystem: MINGW64
  #         install: git mingw-w64-x86_64-toolchain mingw-w64-x86_64-libelf mingw-w64-x86_64-python-pip
  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.9"
  #     - name: Install PlatformIO
  #       # Used for pulling cross-platform CMake and Ninja packages
  #       run: python -m pip install platformio
  #     - name: Build
  #       run: python build.py
  #     - name: Attach artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cppcheck-win64
  #         path: result/tool-cppcheck-*.tar.gz
  #         retention-days: 1
        

  # build-lin64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.9"
  #     - name: Install PlatformIO
  #       # Used for pulling cross-platform CMake and Ninja packages
  #       run: python -m pip install platformio
  #     - name: Build
  #       run: python build.py
  #     - name: Attach artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cppcheck-lin64
  #         path: result/tool-cppcheck-*.tar.gz
  #         retention-days: 1

  # build-darwin-x64:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v3
  #       with:
  #         python-version: "3.9"
  #     - name: Install PlatformIO
  #       # Used for pulling cross-platform CMake and Ninja packages
  #       run: python -m pip install platformio
  #     - name: Build
  #       env:
  #         PLATFORMIO_PACKAGE_SYSTEM_VALUES: "darwin_x86_64,darwin_arm64"
  #       run: python build.py
  #     - name: Attach artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cppcheck-darwin64
  #         path: result/tool-cppcheck-*.tar.gz
  #         retention-days: 1

  # release:
  #   runs-on: ubuntu-latest
  #   needs: [build-win64, build-lin64, build-darwin-x64, build-armhf, build-aarch64]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/download-artifact@v3
  #       with:
  #         path: final_packages
  #     - name: Display structure of downloaded files
  #       run: ls -R
  #       working-directory: final_packages
  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: final_packages/*/*.tar.gz


  ## Ubuntu 20.04 is not supported by Arm v6
  # build-armel:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - uses: uraimo/run-on-arch-action@v2.6.0
  #       name: Install dependencies and build Cppcheck
  #       id: build
  #       with:
  #         arch: aarch64
  #         distro: ubuntu20.04
  #         githubToken: ${{ github.token }}
          
  #         # Create an artifacts directory
  #         setup: |
  #           mkdir -p "${PWD}/artifacts"
          
  #         # Mount the artifacts directory as /artifacts in the container
  #         dockerRunArgs: |
  #           --volume "${PWD}/result:/artifacts"
      
  #         run: |
  #           apt-get update -y
  #           apt-get install -y python3 python3-pip
  #           python3 -m pip install platformio
  #           python3 build.py
  #     - name: Display structure of downloaded files
  #       run: ls -R result
  #     - name: Attach artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: cppcheck-armhf
  #         path: result/tool-cppcheck-*.tar.gz
  #         retention-days: 1